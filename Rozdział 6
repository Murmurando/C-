Zadanie 1:
using System;

namespace ConsoleApp1
{
    class Prostokat
    {

        private int dlugosc, szerokosc;

        private int powierzchnia()
        {
            return dlugosc * szerokosc;
        }
        private int obwod()
        {
            return 2*(dlugosc+szerokosc);

        }
        public void Prezentuj()
        {
            Console.WriteLine("Pole prostokąta o wymiarach {0}x{1} wynosi {2}", dlugosc, szerokosc, powierzchnia());
            Console.WriteLine("Obówd prostokąta o wymiarach {0}x{1} wynosi {2}", dlugosc, szerokosc, obwod());
        }

        public Prostokat(int a, int b)
        {
            dlugosc = a;
            szerokosc = b;

        }


        static void Main(string[] args)
        {
            Prostokat p = new Prostokat(5, 6);
            p.Prezentuj();

        }


    }
}

Zadanie 2:
using System;

namespace ConsoleApp1
{
    class Prostokat
    {

        private int dlugosc, szerokosc;

        private int powierzchnia()
        {
            return dlugosc * szerokosc;
        }
        private int obwod()
        {
            return 2*(dlugosc+szerokosc);

        }
        public void Prezentuj()
        {
            Console.WriteLine("Pole prostokąta o wymiarach {0}x{1} wynosi {2}", dlugosc, szerokosc, powierzchnia());
            Console.WriteLine("Obówd prostokąta o wymiarach {0}x{1} wynosi {2}", dlugosc, szerokosc, obwod());
        }

        public Prostokat(int a, int b)
        {
            dlugosc = a;
            szerokosc = b;

        }


        static void Main(string[] args)
        {
            Prostokat[] prostokaty = new Prostokat[20];
            Random rand = new Random();
            for (int i=0; i<prostokaty.Length; i++)
            {
                prostokaty[i] = new Prostokat(rand.Next(1, 20), rand.Next(1, 20));
            }
            foreach (Prostokat prostokat in prostokaty)
            {
                prostokat.Prezentuj();
            }
            Console.ReadKey();

        }


    }
}


Zadanie 3:
using System;



namespace ConsoleApp1
{
    class Prostokat
    {

        private int dlugosc, szerokosc;

        private int powierzchnia()
        {
            return dlugosc * szerokosc;
        }
        private int obwod()
        {
            return 2*(dlugosc+szerokosc);

        }
        public void Prezentuj()
        {
            Console.WriteLine("Pole prostokąta o wymiarach {0}x{1} wynosi {2}", dlugosc, szerokosc, powierzchnia());
            Console.WriteLine("Obówd prostokąta o wymiarach {0}x{1} wynosi {2}", dlugosc, szerokosc, obwod());
        }

        public Prostokat(int a, int b)
        {
            dlugosc = a;
            szerokosc = b;

        }

        public static int naj_pow(Prostokat[] prostokaty)
        {
            int max = 0;
            foreach (Prostokat prostokat in prostokaty)
            {
                if (prostokat.powierzchnia() > max)
                    max = prostokat.powierzchnia();
            }
            return max;
        }

        static void Main(string[] args)
        {
            Console.WriteLine("Zadanie 3");
            Prostokat[] prostokaty = new Prostokat[20];
            Random rand = new Random();
            for (int i = 0; i < prostokaty.Length; i++)
            {
                prostokaty[i] = new Prostokat(rand.Next(1, 20), rand.Next(1, 20));
            }
            foreach (Prostokat prostokat in prostokaty)
            {
                prostokat.Prezentuj();
            }
            Console.WriteLine("Największa powierzchnia : {0}", Prostokat.naj_pow(prostokaty));
            Console.ReadKey();

        }


    }
}

Zadanie 4:

using System;



namespace ConsoleApp1
{
    class Zuzycie
    {

        private double zuzycie_poczatkowe;
        private double zuzycie_koncowe;

        public Zuzycie(double a, double b)
        {
            zuzycie_poczatkowe = a;
            zuzycie_koncowe = b;
        }

        public string informacje
        { 
            get { return "Poczatkowy stan licznika: " + zuzycie_poczatkowe + " Koncowy stan licznika: " + zuzycie_koncowe; } 
        }

        public double zuzycie 
        { 
            get { return zuzycie_koncowe - zuzycie_poczatkowe; } 
        
        }

        static void Main(string[] args)
        {
            Random rand = new Random();
            Zuzycie licznik = new Zuzycie(rand.NextDouble() * 20, rand.NextDouble() * 20 + 20);
            Console.WriteLine(licznik.informacje);
            Console.WriteLine("Zużycie wynosi: {0}", licznik.zuzycie);
            Console.ReadKey();

        }


    }
}

Zadanie 5:

using System;

namespace ConsoleApp1
{
    class Punkt
    {

        private double x;
        private double y;

        public Punkt(double x1, double y1)
        {
            x = x1;
            y = y1;
        }

        public double Get_x { get { return x; } }
        public double Get_y { get { return y; } }

        public void Przesun(double px, double py)
        {
            x += px;
            y += py;
        }
        public void Wyswietl()
        {
            Console.WriteLine("Wspolrzedne punktu: ({0},{1})", x, y);
        }

        static void Main(string[] args)
        {
            Punkt pkt = new Punkt(2, 3);
            pkt.Wyswietl();
            Console.WriteLine("Przesuniecie punktu o wektor: (1,2)");
            pkt.Przesun(1, 2);
            pkt.Wyswietl();
            Console.ReadKey();
        }

    }
}

Zadanie 6

using  System;

namespace Program
{
    public class Punkt
    {
        private double x;
        private double y;
        public Punkt(double m, double n)
        {
            x = m;
            y = n;
        }
        public void Wyswietl()
        {
            Console.WriteLine("Wspolrzedne punktu (x,y): ({0},{1})", x, y);
        }
        
        public static bool prosta(Punkt[] punkty)
        {
            if (0 < punkty.Length && punkty.Length < 3)
            {
                return true;
            }
            else
            {
                double a, b;
                a = (punkty[0].y - punkty[1].y) / (punkty[0].x - punkty[1].x);
                b = punkty[0].y - a * punkty[0].x;
                for (int i = 2; i < punkty.Length; i++)
                {
                    if (punkty[i].y != a * punkty[i].x + b)
                    {
                        return false;
                    }
                }
                return true;
            }

        }
        static void Main(string[] args)
        {
            Punkt[] punkty = new Punkt[3];
            Console.WriteLine("Sprawdzanie punktów na jednej prostej");
            punkty[0] = new Punkt(1, 2);
            punkty[1] = new Punkt(3, 4);
            punkty[2] = new Punkt(5, 7);
            foreach (Punkt punkt in punkty)
            {
                punkt.Wyswietl();
            }
            if (Punkt.prosta(punkty) == true)
                Console.WriteLine("Punkty leżą na jednej prostej", punkty[0]);
            else
                Console.WriteLine("Punkty NIE leżą na jednej prostej");

            Console.ReadKey();
        }


    }   
}

